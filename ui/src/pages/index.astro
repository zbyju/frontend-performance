---
import ExerciseLists from '../components/ExerciseLists';
import UserToken from '../components/UserToken.jsx';
import Layout from '../layouts/Layout.astro';
import { Exercise } from '../types/exercise.types';

const exercisePosts = await Astro.glob<Exercise>('./exercises/*.md');
const exercises: Exercise[] = exercisePosts.map(e => ({ 
	title: e.frontmatter.title,
	desc: e.rawContent(),
	slug: e.frontmatter.slug,
	url: e.url
}))
---

<Layout title="Home">
	<main>
		<h1>Home</h1>
		<UserToken client:load />
		<ExerciseLists exercises={exercises} client:visible />
	</main>
</Layout>

<style is:global>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}

	.link-card {
		list-style: none;
		display: flex;
		padding: 0.15rem;
		background-color: white;
		background-image: var(--accent-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    margin-top: 5px;
    margin-bottom: 5px;
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		color: #111;
		background-color: white;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
  .link-card p {
    padding: 0;
    margin: 0
  }
  .link-card p.loading { color: #444 }
  .link-card p.pending { color: rgb(78, 35, 210) }
  .link-card p.completed { color: rgb(59, 164, 71) }
  .link-card p.touched { color: #222 }
  .link-card p.untouched { color: #444 }
</style>
